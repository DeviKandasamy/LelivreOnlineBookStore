DROP TABLE WRITES, GENRE, EBOOK, SOFTCOPY, HARDCOPY, RATING, AUTHOR, TRANSACTION_BOOKLOG, TRANSACTION, CREDITCARDS, SHOPPINGCART, CUSTOMER, BOOK, PUBLISHER;
 
CREATE TABLE PUBLISHER(
NAME VARCHAR(100)PRIMARY KEY NOT NULL,
ADDRESS VARCHAR(500));
 
CREATE TABLE BOOK(
BOOK_ISBN VARCHAR(50) PRIMARY KEY NOT NULL,
TITLE VARCHAR(100),
YEAR_OF_PUBLICATION INT,
BOOK_EDITION INT,
PNAME VARCHAR(100),
FOREIGN KEY(PNAME) REFERENCES PUBLISHER(NAME) ON UPDATE CASCADE ON DELETE CASCADE);
 
CREATE TABLE CUSTOMER(
Userid VARCHAR(100) PRIMARY KEY NOT NULL,
FirstName VARCHAR(100),
MiddleName VARCHAR(100),
LastName VARCHAR(100),
BirthDate DATE,
PreferredGenres VARCHAR(50),
CustomerAddress VARCHAR(100),
UserPassword VARCHAR(50) NOT NULL,
Personal_emailid VARCHAR(100),
BOOK_ISBN VARCHAR(50),
FOREIGN KEY(BOOK_ISBN) REFERENCES BOOK ON UPDATE CASCADE ON DELETE CASCADE);
 
CREATE TABLE SHOPPINGCART(
ShoppingCartNo INT PRIMARY KEY NOT NULL,
Quantity INT NOT NULL,
ItemPrice FLOAT NOT NULL,
ShippingCost FLOAT NOT NULL,
book_type VARCHAR(50) NOT NULL,
Userid VARCHAR(100) NOT NULL,
BOOK_ISBN VARCHAR(50) NOT NULL,
FOREIGN KEY(BOOK_ISBN) REFERENCES BOOK,
FOREIGN KEY(Userid) REFERENCES CUSTOMER );
 
CREATE TABLE CREDITCARDS(
CardNo VARCHAR(20) PRIMARY KEY NOT NULL,
CardType VARCHAR(20) NOT NULL,
CardExpiration DATE NOT NULL,
BillingAddress VARCHAR(300),
Userid VARCHAR(100) NOT NULL,
FOREIGN KEY(Userid) REFERENCES CUSTOMER ON UPDATE CASCADE ON DELETE CASCADE);
 
CREATE TABLE TRANSACTION(
TransactionID INT NOT NULL,
Userid VARCHAR(100) NOT NULL,
Date_Of_Purchase Date,
Amount  float,
CardNo VARCHAR(20),
PRIMARY KEY(TransactionID),
FOREIGN KEY(CardNo) REFERENCES CREDITCARDS,
FOREIGN KEY(Userid) REFERENCES CUSTOMER);

CREATE TABLE TRANSACTION_BOOKLOG(
TransactionID INT NOT NULL,
BOOK_ISBN VARCHAR(50) NOT NULL,
type_of_book VARCHAR(50) NOT NULL,
Quantity INT NOT NULL,
PRIMARY KEY (TransactionID, BOOK_ISBN, type_of_book),
FOREIGN KEY(TransactionID) REFERENCES TRANSACTION,
FOREIGN KEY(BOOK_ISBN) REFERENCES BOOK); 
 
CREATE TABLE AUTHOR(
FirstName VARCHAR(100) NOT NULL,
MiddleName VARCHAR(100) NOT NULL,
LastName VARCHAR(100) NOT NULL,
DATE_OF_BIRTH DATE,
BIRTHPLACE VARCHAR(30),
BIOGRAPHY VARCHAR(500),
PRIMARY KEY (FirstName, MiddleName, LastName));
 
CREATE TABLE RATING(
RatingID INT NOT NULL PRIMARY KEY,
NUMBERS INT NOT NULL CHECK (NUMBERS >= 0 AND NUMBERS <= 5),
REVIEW_COMMENTS VARCHAR (500),
FirstName VARCHAR(100),
MiddleName VARCHAR(100),
LastName VARCHAR(100),
BOOK_ISBN VARCHAR(50),
Userid VARCHAR(100) NOT NULL,
Foreign Key(FirstName, MiddleName, LastName) References AUTHOR(FirstName, MiddleName, LastName) ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY(BOOK_ISBN) REFERENCES BOOK ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY(Userid) REFERENCES CUSTOMER ON UPDATE CASCADE ON DELETE CASCADE);
 
CREATE TABLE HARDCOPY (
HARD_COPY_PRICE FLOAT,
BOOK_ISBN VARCHAR(50),
PRIMARY KEY (BOOK_ISBN),
FOREIGN KEY(BOOK_ISBN) REFERENCES BOOK ON UPDATE CASCADE ON DELETE CASCADE);
 
CREATE TABLE SOFTCOPY(
SOFT_COPY_PRICE FLOAT,
BOOK_ISBN VARCHAR(50),
PRIMARY KEY (BOOK_ISBN),
FOREIGN KEY(BOOK_ISBN) REFERENCES BOOK ON UPDATE CASCADE ON DELETE CASCADE);
 
CREATE TABLE EBOOK(
EBOOK_PRICE FLOAT,
BOOK_ISBN VARCHAR(50),
PRIMARY KEY (BOOK_ISBN),
FOREIGN KEY(BOOK_ISBN) REFERENCES BOOK ON UPDATE CASCADE ON DELETE CASCADE);
 
CREATE TABLE GENRE(
GENRE_NAME VARCHAR(100) NOT NULL,
BOOK_ISBN VARCHAR(50) NOT NULL,
PRIMARY KEY (GENRE_NAME, BOOK_ISBN),
FOREIGN KEY (BOOK_ISBN) REFERENCES BOOK ON UPDATE CASCADE ON DELETE CASCADE);
 
CREATE TABLE WRITES(
FirstName VARCHAR(100) NOT NULL,
MiddleName VARCHAR(100) NOT NULL,
LastName VARCHAR(100) NOT NULL,
BOOK_ISBN VARCHAR(50) NOT NULL,
PRIMARY KEY (BOOK_ISBN,FirstName, MiddleName, LastName),
Foreign Key(FirstName, MiddleName, LastName) References AUTHOR(FirstName, MiddleName, LastName) ON UPDATE CASCADE ON DELETE CASCADE,
Foreign Key (BOOK_ISBN) REFERENCES BOOK ON UPDATE CASCADE ON DELETE CASCADE
);







